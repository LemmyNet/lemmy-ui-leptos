steps:
  prettier_check:
    image: tmknom/prettier:3.2.5
    commands:
      - prettier -c .
    when:
      - event: pull_request

  toml_fmt:
    image: tamasfe/taplo:0.8.1
    commands:
      - taplo format --check
    when:
      - event: pull_request

  cargo_fmt:
    image: rustlang/rust:nightly-bookworm-slim
    commands:
      - rustup component add rustfmt
      - cargo +nightly fmt -- --check
    when:
      - event: pull_request

  cargo_clippy:
    image: rust:slim-bookworm
    commands:
      - cargo clippy
    when:
      - event: pull_request

  build_image:
    image: docker:latest
    commands:
      - docker build --rm -t local/base --target base .
      - docker build --rm -t local/leptos-ui --target leptos-ui.ci .
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      - event: pull_request

  leptos_fmt:
    image: local/leptos-ui
    commands:
      - cargo binstall -y leptosfmt
      - leptosfmt -c .leptosfmt.toml --check src
    when:
      - event: pull_request
    depends_on: [build_image]

  cargo_machete:
    image: local/base
    commands:
      - cargo binstall -y cargo-machete
      - cargo machete
    when:
      - event: pull_request
    depends_on: [build_image]

  cargo_build:
    image: local/leptos-ui
    commands:
      - cargo leptos build
    when:
      - event: pull_request
    depends_on: [build_image]

  # No rust unit tests yet
  # cargo_test:
  #   image: *rust_image
  #   environment:
  #     CARGO_HOME: .cargo
  #   commands:
  #     - *install_binstall
  #     - cargo-binstall -y cargo-leptos
  #     - apt-get update && apt-get -y install libssl-dev pkg-config
  #     - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
  #     - . /root/.profile
  #     - nvm install --lts
  #     - npm install -g pnpm
  #     - pnpm install
  #     - rustup target add wasm32-unknown-unknown
  #     - cargo leptos test
  #   when:
  #     - event: pull_request

  # Uncomment this when we find a way to test this on Arch linux
  # playwright_check:
  #   image: mcr.microsoft.com/playwright:latest
  #   environment:
  #     CARGO_HOME: .cargo
  #   commands:
  #     - apt update && apt -y install libssl-dev pkg-config  build-essential gcc make
  #     - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  #     # - . "/woodpecker/src/github.com/LemmyNet/lemmy-ui-leptos/.cargo/env"
  #     - . ".cargo/env"
  #     - wget https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz && tar -xvf cargo-binstall-x86_64-unknown-linux-musl.tgz && cp cargo-binstall .cargo/bin
  #     - cargo-binstall -y cargo-leptos
  #     - npm install -g pnpm
  #     - pnpm install
  #     - rustup target add wasm32-unknown-unknown
  #     - cd end2end
  #     - pnpm install
  #     - cd ..
  #     - LEMMY_UI_LEPTOS_LEMMY_HOST=lemmy:8536 LEMMY_UI_LEPTOS_LEMMY_HTTPS=false LEPTOS_TAILWIND_VERSION=v3.4.1 cargo leptos end-to-end
  #   when:
  #     - event: pull_request

  notify_on_failure:
    image: alpine:3
    commands:
      - apk add curl
      - "curl -d'Lemmy-UI-leptos build failed: ${CI_BUILD_LINK}' ntfy.sh/lemmy_drone_ci"
    when:
      - event: pull_request
        status: failure

  notify_on_tag_deploy:
    image: alpine:3
    commands:
      - apk add curl
      - "curl -d'Lemmy-UI-leptos:${CI_COMMIT_TAG} deployed' ntfy.sh/lemmy_drone_ci"
    when:
      event: tag
