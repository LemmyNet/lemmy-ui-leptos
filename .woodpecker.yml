variables:
  - &rust_image "rustlang/rust:nightly-slim"

steps:
  prettier_check:
    image: tmknom/prettier:3.0.0
    commands:
      - prettier -c .

  toml_fmt:
    image: tamasfe/taplo:0.8.1
    commands:
      - taplo format --check

  cargo_fmt:
    image: *rust_image
    environment:
      # store cargo data in repo folder so that it gets cached between steps
      CARGO_HOME: .cargo
    commands:
      - cargo fmt -- --check

  leptos_fmt:
    image: *rust_image
    commands:
      - cargo install leptosfmt
      - leptosfmt -c .leptosfmt.toml --check src

  cargo_clippy:
    image: *rust_image
    environment:
      CARGO_HOME: .cargo
    commands:
      - apt-get update && apt-get -y install libssl-dev pkg-config
      - rustup component add clippy
      - cargo clippy

  cargo_build:
    image: *rust_image
    environment:
      CARGO_HOME: .cargo
    commands:
      - apt-get update && apt-get -y install libssl-dev pkg-config curl
      - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      - . /root/.profile
      - nvm install node
      - npm i
      - rustup target add wasm32-unknown-unknown
      - cargo install cargo-leptos
      - cargo leptos build

  # Nothing to test yet
  # cargo_test:
  #   image: *rust_image
  #   environment:
  #     CARGO_HOME: .cargo
  #   commands:
  #     - apt-get update && apt-get -y install libssl-dev pkg-config
  #     - rustup target add wasm32-unknown-unknown
  #     - cargo install cargo-leptos
  #     - cargo leptos test

  notify_on_failure:
    image: alpine:3
    commands:
      - apk add curl
      - "curl -d'Lemmy-UI-leptos build failed: ${CI_BUILD_LINK}' ntfy.sh/lemmy_drone_ci"
    when:
      status: [failure]

  notify_on_tag_deploy:
    image: alpine:3
    commands:
      - apk add curl
      - "curl -d'Lemmy-UI-leptos:${CI_COMMIT_TAG} deployed' ntfy.sh/lemmy_drone_ci"
    when:
      event: tag
