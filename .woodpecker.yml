variables:
  - &cd_workdir "cd /usr/src/app"
  - &rust_image "rustlang/rust:nightly-bookworm-slim"
  - install_binstall: &install_binstall
      - apt-get update && apt-get upgrade -y && apt-get install -y wget
      - wget https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz
      - tar -xvf cargo-binstall-x86_64-unknown-linux-musl.tgz
      - cp cargo-binstall /usr/local/cargo/bin

steps:
  prettier_check:
    image: tmknom/prettier:3.2.5
    commands:
      - prettier -c .
    when:
      - event: pull_request

  toml_fmt:
    image: tamasfe/taplo:0.9.2
    commands:
      - taplo format --check
    when:
      - event: pull_request

  cargo_fmt:
    image: *rust_image
    commands:
      - rustup component add rustfmt
      - cargo +nightly fmt -- --check
    when:
      - event: pull_request

  leptos_fmt:
    image: *rust_image
    commands:
      - <<: *install_binstall
      - cargo binstall -y leptosfmt
      - leptosfmt -c .leptosfmt.toml --check src
    when:
      - event: pull_request

  cargo_machete:
    image: *rust_image
    commands:
      - <<: *install_binstall
      - cargo binstall -y cargo-machete
      - cargo machete
    when:
      - event: pull_request

  cargo_clippy:
    image: *rust_image
    commands:
      - rustup component add clippy
      - cargo clippy
    when:
      - event: pull_request

  cargo_leptos_build:
    image: *rust_image
    commands:
      - cargo leptos build
    when:
      - event: pull_request

  # cargo_test:
  #   image: local/leptos-ui
  #   entrypoint: [cargo, leptos, test]
  #   when:
  #     - event: pull_request

  lemmy:
    image: dessalines/lemmy:0.19.4-beta.7
    environment:
      LEMMY_CONFIG_LOCATION: /woodpecker/src/github.com/LemmyNet/lemmy-ui-leptos/end2end/lemmy.hjson
    detach: true
    when:
      - event: pull_request

  build_image:
    image: docker:latest
    commands:
      - docker build --rm -t local/base --target base .
      - docker build --rm -t local/leptos-ui --target leptos-ui .
      - docker build --rm -t local/playwright --target playwright .
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      - event: pull_request

  playwright_check:
    image: local/playwright
    commands:
      - *cd_workdir
    when:
      - event: pull_request

  notify_on_failure:
    image: alpine:3
    commands:
      - apk add curl
      - "curl -d'Lemmy-UI-leptos build failed: ${CI_BUILD_LINK}' ntfy.sh/lemmy_drone_ci"
    when:
      - event: pull_request
        status: failure

  notify_on_tag_deploy:
    image: alpine:3
    commands:
      - apk add curl
      - "curl -d'Lemmy-UI-leptos:${CI_COMMIT_TAG} deployed' ntfy.sh/lemmy_drone_ci"
    when:
      event: tag

services:
  database:
    image: pgautoupgrade/pgautoupgrade:16-alpine
    environment:
      POSTGRES_USER: lemmy
      POSTGRES_PASSWORD: password
      POSTGRES_DB: lemmy
